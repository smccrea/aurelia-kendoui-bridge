{"version":3,"sources":["combobox/combobox.js"],"names":["getSelectNode","element","querySelectorAll","inject","Container","customElement","bindable","WidgetBase","generateBindables","constants","ComboBox","elementPrefix","Element","widgetBase","container","control","linkViewModel","useRootElement","useValueBinding","useContainer","bindToKendo","subscribe","event","callback","bind","ctx","overrideCtx","useParentCtx","attached","kNoInit","recreate","selectNodes","useElement","length","templates","util","getChildrenVMs","useTemplates","kWidget","propertyChanged","property","newValue","oldValue","handlePropertyChanged","destroy","detached"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA,WAASA,aAAT,CAAuBC,OAAvB,EAAgC;AAC9B,WAAOA,QAAQC,gBAAR,CAAyB,QAAzB,CAAP;AACD;;;AAhEOC,Y,+BAAAA,M;AAAQC,e,+BAAAA,S;;AACRC,mB,sBAAAA,a;AAAeC,c,sBAAAA,Q;;AACfC,gB,qBAAAA,U;;AACAC,uB,qBAAAA,iB;;AACAC,e,oBAAAA,S;;;0BAKKC,Q,WAHZL,cAAiBI,UAAUE,aAA3B,c,UACAH,kBAAkB,eAAlB,C,UACAL,OAAOS,OAAP,EAAgBL,UAAhB,EAA4BH,SAA5B,C;AAKC,0BAAYH,OAAZ,EAAqBY,UAArB,EAAiCC,SAAjC,EAA4C;AAAA;;AAAA;;AAAA;;AAC1C,eAAKb,OAAL,GAAeA,OAAf;AACA,eAAKY,UAAL,GAAkBA,WACfE,OADe,CACP,eADO,EAEfC,aAFe,CAED,IAFC,EAGfC,cAHe,CAGA,KAAKhB,OAHL,EAIfiB,eAJe,GAKfC,YALe,CAKFL,SALE,EAMfM,WANe,CAMH,UANG,EAMS,QANT,EAOfA,WAPe,CAOH,WAPG,EAOU,UAPV,CAAlB;AAQD;;2BAEDC,S,sBAAUC,K,EAAOC,Q,EAAU;AACzB,iBAAO,KAAKV,UAAL,CAAgBQ,SAAhB,CAA0BC,KAA1B,EAAiCC,QAAjC,CAAP;AACD,S;;2BAEDC,I,iBAAKC,G,EAAKC,W,EAAa;AACrB,eAAKb,UAAL,CAAgBc,YAAhB,CAA6BD,WAA7B;AACD,S;;2BAEDE,Q,uBAAW;AACT,cAAI,CAAC,KAAKC,OAAV,EAAmB;AACjB,iBAAKC,QAAL;AACD;AACF,S;;2BAEDA,Q,uBAAW;AACT,cAAIC,cAAc/B,cAAc,KAAKC,OAAnB,CAAlB;AACA,eAAKY,UAAL,CAAgBmB,UAAhB,CAA2BD,YAAYE,MAAZ,GAAqB,CAArB,GAAyBF,YAAY,CAAZ,CAAzB,GAA0C,KAAK9B,OAA1E;;AAEA,cAAIiC,YAAY,KAAKrB,UAAL,CAAgBsB,IAAhB,CAAqBC,cAArB,CAAoC,KAAKnC,OAAzC,EAAqDQ,UAAUE,aAA/D,cAAhB;AACA,eAAKE,UAAL,CAAgBwB,YAAhB,CAA6B,IAA7B,EAAmC,eAAnC,EAAoDH,SAApD;;AAEA,eAAKI,OAAL,GAAe,KAAKzB,UAAL,CAAgBiB,QAAhB,EAAf;AACD,S;;2BAEDS,e,4BAAgBC,Q,EAAUC,Q,EAAUC,Q,EAAU;AAC5C,eAAK7B,UAAL,CAAgB8B,qBAAhB,CAAsC,KAAKL,OAA3C,EAAoDE,QAApD,EAA8DC,QAA9D,EAAwEC,QAAxE;AACD,S;;2BAEDE,O,sBAAU;AACR,eAAK/B,UAAL,CAAgB+B,OAAhB,CAAwB,KAAKN,OAA7B;AACD,S;;2BAEDO,Q,uBAAW;AACT,eAAKD,OAAL;AACD,S;;;oFAjDAtC,Q;;;oFACAA,Q","file":"combobox/combobox.js","sourceRoot":"/source/","sourcesContent":["import {inject, Container} from 'aurelia-dependency-injection';\r\nimport {customElement, bindable} from 'aurelia-templating';\r\nimport {WidgetBase} from '../common/widget-base';\r\nimport {generateBindables} from '../common/decorators';\r\nimport {constants} from '../common/constants';\r\n\r\n@customElement(`${constants.elementPrefix}combobox`)\r\n@generateBindables('kendoComboBox')\r\n@inject(Element, WidgetBase, Container)\r\nexport class ComboBox {\r\n  @bindable kEnabled;\r\n  @bindable kReadOnly;\r\n\r\n  constructor(element, widgetBase, container) {\r\n    this.element = element;\r\n    this.widgetBase = widgetBase\r\n      .control('kendoComboBox')\r\n      .linkViewModel(this)\r\n      .useRootElement(this.element)\r\n      .useValueBinding()\r\n      .useContainer(container)\r\n      .bindToKendo('kEnabled', 'enable')\r\n      .bindToKendo('kReadOnly', 'readonly');\r\n  }\r\n\r\n  subscribe(event, callback) {\r\n    return this.widgetBase.subscribe(event, callback);\r\n  }\r\n\r\n  bind(ctx, overrideCtx) {\r\n    this.widgetBase.useParentCtx(overrideCtx);\r\n  }\r\n\r\n  attached() {\r\n    if (!this.kNoInit) {\r\n      this.recreate();\r\n    }\r\n  }\r\n\r\n  recreate() {\r\n    let selectNodes = getSelectNode(this.element);\r\n    this.widgetBase.useElement(selectNodes.length > 0 ? selectNodes[0] : this.element);\r\n\r\n    let templates = this.widgetBase.util.getChildrenVMs(this.element, `${constants.elementPrefix}template`);\r\n    this.widgetBase.useTemplates(this, 'kendoComboBox', templates);\r\n\r\n    this.kWidget = this.widgetBase.recreate();\r\n  }\r\n\r\n  propertyChanged(property, newValue, oldValue) {\r\n    this.widgetBase.handlePropertyChanged(this.kWidget, property, newValue, oldValue);\r\n  }\r\n\r\n  destroy() {\r\n    this.widgetBase.destroy(this.kWidget);\r\n  }\r\n\r\n  detached() {\r\n    this.destroy();\r\n  }\r\n}\r\n\r\nfunction getSelectNode(element) {\r\n  return element.querySelectorAll('select');\r\n}\r\n"]}