{"version":3,"sources":["panelbar/panelbar.js"],"names":["hasListChildNode","element","children","length","nodeName","customElement","inject","constants","WidgetBase","generateBindables","PanelBar","elementPrefix","Element","widgetBase","control","useRootElement","linkViewModel","subscribe","event","callback","bind","ctx","overrideCtx","useParentCtx","attached","kNoInit","recreate","ul","document","createElement","appendChild","useElement","kWidget","destroy","detached"],"mappings":";;;;;;;;;;;AAiEA,WAASA,gBAAT,CAA0BC,OAA1B,EAAmC;AACjC,WAAOA,QAAQC,QAAR,CAAiBC,MAAjB,GAA0B,CAA1B,KAAgCF,QAAQC,QAAR,CAAiB,CAAjB,EAAoBE,QAApB,KAAiC,IAAjC,IAAyCH,QAAQC,QAAR,CAAiB,CAAjB,EAAoBE,QAApB,KAAiC,IAA1G,CAAP;AACD;;;AAnEOC,mB,sBAAAA,a;;AACAC,Y,+BAAAA,M;;AACAC,e,oBAAAA,S;;AACAC,gB,qBAAAA,U;;AACAC,uB,qBAAAA,iB;;;0BAKKC,Q,WAHZL,cAAiBE,UAAUI,aAA3B,e,UACAF,kBAAkB,eAAlB,C,UACAH,OAAOM,OAAP,EAAgBJ,UAAhB,C;AAEC,0BAAYP,OAAZ,EAAqBY,UAArB,EAAiC;AAAA;;AAC/B,eAAKZ,OAAL,GAAeA,OAAf;AACA,eAAKY,UAAL,GAAkBA,WACfC,OADe,CACP,eADO,EAEfC,cAFe,CAEA,KAAKd,OAFL,EAGfe,aAHe,CAGD,IAHC,CAAlB;AAID;;2BAEDC,S,sBAAUC,K,EAAOC,Q,EAAU;AACzB,iBAAO,KAAKN,UAAL,CAAgBI,SAAhB,CAA0BC,KAA1B,EAAiCC,QAAjC,CAAP;AACD,S;;2BAEDC,I,iBAAKC,G,EAAKC,W,EAAa;AACrB,eAAKT,UAAL,CAAgBU,YAAhB,CAA6BD,WAA7B;AACD,S;;2BAEDE,Q,uBAAW;AACT,cAAI,CAAC,KAAKC,OAAV,EAAmB;AACjB,iBAAKC,QAAL;AACD;AACF,S;;2BAEDA,Q,uBAAW;AACT,cAAIzB,UAAU,KAAKA,OAAnB;;AAGA,cAAI,CAACD,iBAAiBC,OAAjB,CAAL,EAAgC;AAC9B,gBAAI0B,KAAKC,SAASC,aAAT,CAAuB,IAAvB,CAAT;;AAEA,mBAAO5B,QAAQC,QAAR,CAAiBC,MAAjB,GAA0B,CAAjC,EAAoC;AAClCwB,iBAAGG,WAAH,CAAe7B,QAAQC,QAAR,CAAiB,CAAjB,CAAf;AACD;;AAEDD,oBAAQ6B,WAAR,CAAoBH,EAApB;AACA1B,sBAAU0B,EAAV;AACD,WATD,MASO;AACL1B,sBAAU,KAAKA,OAAL,CAAaC,QAAb,CAAsB,CAAtB,CAAV;AACD;;AAED,eAAKW,UAAL,CAAgBkB,UAAhB,CAA2B9B,OAA3B;;AAEA,eAAK+B,OAAL,GAAe,KAAKnB,UAAL,CAAgBa,QAAhB,EAAf;AACD,S;;2BAEDO,O,sBAAU;AACR,eAAKpB,UAAL,CAAgBoB,OAAhB,CAAwB,KAAKD,OAA7B;AACD,S;;2BAEDE,Q,uBAAW;AACT,eAAKD,OAAL;AACD,S","file":"panelbar/panelbar.js","sourceRoot":"/source/","sourcesContent":["import {customElement} from 'aurelia-templating';\r\nimport {inject} from 'aurelia-dependency-injection';\r\nimport {constants} from '../common/constants';\r\nimport {WidgetBase} from '../common/widget-base';\r\nimport {generateBindables} from '../common/decorators';\r\n\r\n@customElement(`${constants.elementPrefix}panel-bar`)\r\n@generateBindables('kendoPanelBar')\r\n@inject(Element, WidgetBase)\r\nexport class PanelBar {\r\n  constructor(element, widgetBase) {\r\n    this.element = element;\r\n    this.widgetBase = widgetBase\r\n      .control('kendoPanelBar')\r\n      .useRootElement(this.element)\r\n      .linkViewModel(this);\r\n  }\r\n\r\n  subscribe(event, callback) {\r\n    return this.widgetBase.subscribe(event, callback);\r\n  }\r\n\r\n  bind(ctx, overrideCtx) {\r\n    this.widgetBase.useParentCtx(overrideCtx);\r\n  }\r\n\r\n  attached() {\r\n    if (!this.kNoInit) {\r\n      this.recreate();\r\n    }\r\n  }\r\n\r\n  recreate() {\r\n    let element = this.element;\r\n\r\n    // Insert a node in between the parent/children if no UL/OL is found\r\n    if (!hasListChildNode(element)) {\r\n      let ul = document.createElement('ul');\r\n\r\n      while (element.children.length > 0) {\r\n        ul.appendChild(element.children[0]);\r\n      }\r\n\r\n      element.appendChild(ul);\r\n      element = ul;\r\n    } else {\r\n      element = this.element.children[0];\r\n    }\r\n\r\n    this.widgetBase.useElement(element);\r\n\r\n    this.kWidget = this.widgetBase.recreate();\r\n  }\r\n\r\n  destroy() {\r\n    this.widgetBase.destroy(this.kWidget);\r\n  }\r\n\r\n  detached() {\r\n    this.destroy();\r\n  }\r\n}\r\n\r\n\r\n// if the first child is not a UL/OL then create one to use as the target, otherwise the panelbar can look a bit mangled\r\nfunction hasListChildNode(element) {\r\n  return element.children.length > 0 && (element.children[0].nodeName === 'UL' || element.children[0].nodeName === 'OL');\r\n}\r\n"]}