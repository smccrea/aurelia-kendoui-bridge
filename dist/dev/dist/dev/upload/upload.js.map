{"version":3,"sources":["upload/upload.js"],"names":["inject","Container","customElement","WidgetBase","generateBindables","constants","Upload","elementPrefix","Element","element","widgetBase","container","control","useRootElement","linkViewModel","useContainer","subscribe","event","callback","bind","ctx","overrideCtx","useParentCtx","attached","kNoInit","recreate","target","inputs","querySelectorAll","length","document","createElement","appendChild","useElement","templates","util","getChildrenVMs","useTemplates","kWidget","destroy","detached"],"mappings":";;;;;;;;;;;;;AAAQA,Y,+BAAAA,M;AAAQC,e,+BAAAA,S;;AACRC,mB,sBAAAA,a;;AACAC,gB,qBAAAA,U;;AACAC,uB,qBAAAA,iB;;AACAC,e,oBAAAA,S;;;wBAKKC,M,WAHZJ,cAAiBG,UAAUE,aAA3B,Y,UACAH,kBAAkB,aAAlB,C,UACAJ,OAAOQ,OAAP,EAAgBL,UAAhB,EAA4BF,SAA5B,C;AAEC,wBAAYQ,OAAZ,EAAqBC,UAArB,EAAiCC,SAAjC,EAA4C;AAAA;;AAC1C,eAAKF,OAAL,GAAeA,OAAf;AACA,eAAKC,UAAL,GAAkBA,WACfE,OADe,CACP,aADO,EAEfC,cAFe,CAEA,KAAKJ,OAFL,EAGfK,aAHe,CAGD,IAHC,EAIfC,YAJe,CAIFJ,SAJE,CAAlB;AAKD;;yBAEDK,S,sBAAUC,K,EAAOC,Q,EAAU;AACzB,iBAAO,KAAKR,UAAL,CAAgBM,SAAhB,CAA0BC,KAA1B,EAAiCC,QAAjC,CAAP;AACD,S;;yBAEDC,I,iBAAKC,G,EAAKC,W,EAAa;AACrB,eAAKX,UAAL,CAAgBY,YAAhB,CAA6BD,WAA7B;AACD,S;;yBAEDE,Q,uBAAW;AACT,cAAI,CAAC,KAAKC,OAAV,EAAmB;AACjB,iBAAKC,QAAL;AACD;AACF,S;;yBAEDA,Q,uBAAW;AACT,cAAIC,eAAJ;AACA,cAAIC,SAAS,KAAKlB,OAAL,CAAamB,gBAAb,CAA8B,OAA9B,CAAb;AACA,cAAID,OAAOE,MAAP,GAAgB,CAApB,EAAuB;AACrBH,qBAASC,OAAO,CAAP,CAAT;AACD,WAFD,MAEO;AACLD,qBAASI,SAASC,aAAT,CAAuB,OAAvB,CAAT;AACA,iBAAKtB,OAAL,CAAauB,WAAb,CAAyBN,MAAzB;AACD;;AAED,eAAKhB,UAAL,CAAgBuB,UAAhB,CAA2BP,MAA3B;;AAEA,cAAIQ,YAAY,KAAKxB,UAAL,CAAgByB,IAAhB,CAAqBC,cAArB,CAAoC,KAAK3B,OAAzC,EAAqDJ,UAAUE,aAA/D,cAAhB;AACA,eAAKG,UAAL,CAAgB2B,YAAhB,CAA6B,IAA7B,EAAmC,aAAnC,EAAkDH,SAAlD;;AAEA,eAAKI,OAAL,GAAe,KAAK5B,UAAL,CAAgBe,QAAhB,EAAf;AACD,S;;yBAEDc,O,sBAAU;AACR,eAAK7B,UAAL,CAAgB6B,OAAhB,CAAwB,KAAKD,OAA7B;AACD,S;;yBAEDE,Q,uBAAW;AACT,eAAKD,OAAL;AACD,S","file":"upload/upload.js","sourceRoot":"/source/","sourcesContent":["import {inject, Container} from 'aurelia-dependency-injection';\nimport {customElement} from 'aurelia-templating';\nimport {WidgetBase} from '../common/widget-base';\nimport {generateBindables} from '../common/decorators';\nimport {constants} from '../common/constants';\n\n@customElement(`${constants.elementPrefix}upload`)\n@generateBindables('kendoUpload')\n@inject(Element, WidgetBase, Container)\nexport class Upload {\n  constructor(element, widgetBase, container) {\n    this.element = element;\n    this.widgetBase = widgetBase\n      .control('kendoUpload')\n      .useRootElement(this.element)\n      .linkViewModel(this)\n      .useContainer(container);\n  }\n\n  subscribe(event, callback) {\n    return this.widgetBase.subscribe(event, callback);\n  }\n\n  bind(ctx, overrideCtx) {\n    this.widgetBase.useParentCtx(overrideCtx);\n  }\n\n  attached() {\n    if (!this.kNoInit) {\n      this.recreate();\n    }\n  }\n\n  recreate() {\n    let target;\n    let inputs = this.element.querySelectorAll('input');\n    if (inputs.length > 0) {\n      target = inputs[0];\n    } else {\n      target = document.createElement('input');\n      this.element.appendChild(target);\n    }\n\n    this.widgetBase.useElement(target);\n\n    let templates = this.widgetBase.util.getChildrenVMs(this.element, `${constants.elementPrefix}template`);\n    this.widgetBase.useTemplates(this, 'kendoUpload', templates);\n\n    this.kWidget = this.widgetBase.recreate();\n  }\n\n  destroy() {\n    this.widgetBase.destroy(this.kWidget);\n  }\n\n  detached() {\n    this.destroy();\n  }\n}\n"]}