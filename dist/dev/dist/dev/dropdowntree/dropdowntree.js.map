{"version":3,"sources":["dropdowntree/dropdowntree.js"],"names":["getSelectNode","element","querySelectorAll","inject","Container","customElement","bindable","WidgetBase","generateBindables","constants","DropDownTree","elementPrefix","Element","widgetBase","container","control","useRootElement","linkViewModel","useContainer","bindToKendo","subscribe","event","callback","bind","ctx","overrideCtx","useParentCtx","attached","kNoValueBinding","useValueBinding","kNoInit","recreate","selectNodes","useElement","length","templates","util","getChildrenVMs","useTemplates","kWidget","propertyChanged","property","newValue","oldValue","handlePropertyChanged","destroy","detached"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkEA,WAASA,aAAT,CAAuBC,OAAvB,EAAgC;AAC9B,WAAOA,QAAQC,gBAAR,CAAyB,QAAzB,CAAP;AACD;;;AApEOC,Y,+BAAAA,M;AAAQC,e,+BAAAA,S;;AACRC,mB,sBAAAA,a;AAAeC,c,sBAAAA,Q;;AACfC,gB,qBAAAA,U;;AACAC,uB,qBAAAA,iB;;AACAC,e,oBAAAA,S;;;8BAKKC,Y,WAHZL,cAAiBI,UAAUE,aAA3B,oB,UACAH,kBAAkB,mBAAlB,C,UACAL,OAAOS,OAAP,EAAgBL,UAAhB,EAA4BH,SAA5B,C;AAMC,8BAAYH,OAAZ,EAAqBY,UAArB,EAAiCC,SAAjC,EAA4C;AAAA;;AAAA;;AAAA;;AAAA;;AAC1C,eAAKb,OAAL,GAAeA,OAAf;AACA,eAAKY,UAAL,GAAkBA,WACfE,OADe,CACP,mBADO,EAEfC,cAFe,CAEA,KAAKf,OAFL,EAGfgB,aAHe,CAGD,IAHC,EAIfC,YAJe,CAIFJ,SAJE,EAKfK,WALe,CAKH,UALG,EAKS,QALT,EAMfA,WANe,CAMH,WANG,EAMU,UANV,CAAlB;AAOD;;+BAEDC,S,sBAAUC,K,EAAOC,Q,EAAU;AACzB,iBAAO,KAAKT,UAAL,CAAgBO,SAAhB,CAA0BC,KAA1B,EAAiCC,QAAjC,CAAP;AACD,S;;+BAEDC,I,iBAAKC,G,EAAKC,W,EAAa;AACrB,eAAKZ,UAAL,CAAgBa,YAAhB,CAA6BD,WAA7B;AACD,S;;+BAEDE,Q,uBAAW;AACT,cAAI,CAAC,KAAKC,eAAV,EAA2B;AACzB,iBAAKf,UAAL,CAAgBgB,eAAhB;AACD;;AAED,cAAI,CAAC,KAAKC,OAAV,EAAmB;AACjB,iBAAKC,QAAL;AACD;AACF,S;;+BAEDA,Q,uBAAW;AACT,cAAIC,cAAchC,cAAc,KAAKC,OAAnB,CAAlB;AACA,eAAKY,UAAL,CAAgBoB,UAAhB,CAA2BD,YAAYE,MAAZ,GAAqB,CAArB,GAAyBF,YAAY,CAAZ,CAAzB,GAA0C,KAAK/B,OAA1E;;AAEA,cAAIkC,YAAY,KAAKtB,UAAL,CAAgBuB,IAAhB,CAAqBC,cAArB,CAAoC,KAAKpC,OAAzC,EAAqDQ,UAAUE,aAA/D,cAAhB;AACA,eAAKE,UAAL,CAAgByB,YAAhB,CAA6B,IAA7B,EAAmC,mBAAnC,EAAwDH,SAAxD;;AAEA,eAAKI,OAAL,GAAe,KAAK1B,UAAL,CAAgBkB,QAAhB,EAAf;AACD,S;;+BAEDS,e,4BAAgBC,Q,EAAUC,Q,EAAUC,Q,EAAU;AAC5C,eAAK9B,UAAL,CAAgB+B,qBAAhB,CAAsC,KAAKL,OAA3C,EAAoDE,QAApD,EAA8DC,QAA9D,EAAwEC,QAAxE;AACD,S;;+BAEDE,O,sBAAU;AACR,eAAKhC,UAAL,CAAgBgC,OAAhB,CAAwB,KAAKN,OAA7B;AACD,S;;+BAEDO,Q,uBAAW;AACT,eAAKD,OAAL;AACD,S;;;2FArDAvC,Q;;;iBAA2B,K;;mFAC3BA,Q;;;oFACAA,Q","file":"dropdowntree/dropdowntree.js","sourceRoot":"/source/","sourcesContent":["import {inject, Container} from 'aurelia-dependency-injection';\r\nimport {customElement, bindable} from 'aurelia-templating';\r\nimport {WidgetBase} from '../common/widget-base';\r\nimport {generateBindables} from '../common/decorators';\r\nimport {constants} from '../common/constants';\r\n\r\n@customElement(`${constants.elementPrefix}drop-down-tree`)\r\n@generateBindables('kendoDropDownTree')\r\n@inject(Element, WidgetBase, Container)\r\nexport class DropDownTree {\r\n  @bindable kNoValueBinding = false;\r\n  @bindable kEnabled;\r\n  @bindable kReadOnly;\r\n\r\n  constructor(element, widgetBase, container) {\r\n    this.element = element;\r\n    this.widgetBase = widgetBase\r\n      .control('kendoDropDownTree')\r\n      .useRootElement(this.element)\r\n      .linkViewModel(this)\r\n      .useContainer(container)\r\n      .bindToKendo('kEnabled', 'enable')\r\n      .bindToKendo('kReadOnly', 'readonly');\r\n  }\r\n\r\n  subscribe(event, callback) {\r\n    return this.widgetBase.subscribe(event, callback);\r\n  }\r\n\r\n  bind(ctx, overrideCtx) {\r\n    this.widgetBase.useParentCtx(overrideCtx);\r\n  }\r\n\r\n  attached() {\r\n    if (!this.kNoValueBinding) {\r\n      this.widgetBase.useValueBinding();\r\n    }\r\n\r\n    if (!this.kNoInit) {\r\n      this.recreate();\r\n    }\r\n  }\r\n\r\n  recreate() {\r\n    let selectNodes = getSelectNode(this.element);\r\n    this.widgetBase.useElement(selectNodes.length > 0 ? selectNodes[0] : this.element);\r\n\r\n    let templates = this.widgetBase.util.getChildrenVMs(this.element, `${constants.elementPrefix}template`);\r\n    this.widgetBase.useTemplates(this, 'kendoDropDownTree', templates);\r\n\r\n    this.kWidget = this.widgetBase.recreate();\r\n  }\r\n\r\n  propertyChanged(property, newValue, oldValue) {\r\n    this.widgetBase.handlePropertyChanged(this.kWidget, property, newValue, oldValue);\r\n  }\r\n\r\n  destroy() {\r\n    this.widgetBase.destroy(this.kWidget);\r\n  }\r\n\r\n  detached() {\r\n    this.destroy();\r\n  }\r\n}\r\n\r\nfunction getSelectNode(element) {\r\n  return element.querySelectorAll('select');\r\n}\r\n"]}