{"version":3,"sources":["toolbar/toolbar.js"],"names":["inject","Container","customElement","WidgetBase","generateBindables","constants","OptionsBuilder","Toolbar","elementPrefix","Element","element","widgetBase","optionsBuilder","container","control","useElement","beforeInitialize","_beforeInitialize","options","linkViewModel","useContainer","subscribe","event","callback","bind","ctx","overrideCtx","useParentCtx","attached","kNoInit","recreate","kWidget","toolbarItems","util","getChildrenVMs","length","items","forEach","push","item","getOptions","destroy","detached"],"mappings":";;;;;;;;;;;;;AAAQA,Y,+BAAAA,M;AAAQC,e,+BAAAA,S;;AACRC,mB,sBAAAA,a;;AACAC,gB,qBAAAA,U;;AACAC,uB,qBAAAA,iB;;AACAC,e,oBAAAA,S;;AACAC,oB,yBAAAA,c;;;yBAKKC,O,WAHZL,cAAiBG,UAAUG,aAA3B,a,UACAJ,kBAAkB,cAAlB,C,UACAJ,OAAOS,OAAP,EAAgBN,UAAhB,EAA4BG,cAA5B,EAA4CL,SAA5C,C;AAEC,yBAAYS,OAAZ,EAAqBC,UAArB,EAAiCC,cAAjC,EAAiDC,SAAjD,EAA4D;AAAA;;AAAA;;AAC1D,eAAKH,OAAL,GAAeA,OAAf;AACA,eAAKE,cAAL,GAAsBA,cAAtB;AACA,eAAKD,UAAL,GAAkBA,WACfG,OADe,CACP,cADO,EAEfC,UAFe,CAEJ,KAAKL,OAFD,EAGfM,gBAHe,CAGE;AAAA,mBAAW,MAAKC,iBAAL,CAAuBC,OAAvB,CAAX;AAAA,WAHF,EAIfC,aAJe,CAID,IAJC,EAKfC,YALe,CAKFP,SALE,CAAlB;AAMD;;0BAEDQ,S,sBAAUC,K,EAAOC,Q,EAAU;AACzB,iBAAO,KAAKZ,UAAL,CAAgBU,SAAhB,CAA0BC,KAA1B,EAAiCC,QAAjC,CAAP;AACD,S;;0BAEDC,I,iBAAKC,G,EAAKC,W,EAAa;AACrB,eAAKf,UAAL,CAAgBgB,YAAhB,CAA6BD,WAA7B;AACD,S;;0BAEDE,Q,uBAAW;AACT,cAAI,CAAC,KAAKC,OAAV,EAAmB;AACjB,iBAAKC,QAAL;AACD;AACF,S;;0BAEDA,Q,uBAAW;AACT,eAAKC,OAAL,GAAe,KAAKpB,UAAL,CAAgBmB,QAAhB,EAAf;AACD,S;;0BAEDb,iB,8BAAkBC,O,EAAS;AACzB,cAAIc,eAAe,KAAKrB,UAAL,CAAgBsB,IAAhB,CAAqBC,cAArB,CAAoC,KAAKxB,OAAzC,EAAqDL,UAAUG,aAA/D,kBAAnB;AACA,cAAIwB,gBAAgBA,aAAaG,MAAb,GAAsB,CAA1C,EAA6C;AAC3CjB,oBAAQkB,KAAR,GAAgB,EAAhB;;AAEAJ,yBAAaK,OAAb,CAAqB,gBAAQ;AAC3BnB,sBAAQkB,KAAR,CAAcE,IAAd,CAAmBC,KAAKC,UAAL,EAAnB;AACD,aAFD;AAGD;AACF,S;;0BAEDC,O,sBAAU;AACR,eAAK9B,UAAL,CAAgB8B,OAAhB,CAAwB,KAAKV,OAA7B;AACD,S;;0BAEDW,Q,uBAAW;AACT,eAAKD,OAAL;AACD,S","file":"toolbar/toolbar.js","sourceRoot":"/source/","sourcesContent":["import {inject, Container} from 'aurelia-dependency-injection';\nimport {customElement} from 'aurelia-templating';\nimport {WidgetBase} from '../common/widget-base';\nimport {generateBindables} from '../common/decorators';\nimport {constants} from '../common/constants';\nimport {OptionsBuilder} from '../common/options-builder';\n\n@customElement(`${constants.elementPrefix}toolbar`)\n@generateBindables('kendoToolBar')\n@inject(Element, WidgetBase, OptionsBuilder, Container)\nexport class Toolbar {\n  constructor(element, widgetBase, optionsBuilder, container) {\n    this.element = element;\n    this.optionsBuilder = optionsBuilder;\n    this.widgetBase = widgetBase\n      .control('kendoToolBar')\n      .useElement(this.element)\n      .beforeInitialize(options => this._beforeInitialize(options))\n      .linkViewModel(this)\n      .useContainer(container);\n  }\n\n  subscribe(event, callback) {\n    return this.widgetBase.subscribe(event, callback);\n  }\n\n  bind(ctx, overrideCtx) {\n    this.widgetBase.useParentCtx(overrideCtx);\n  }\n\n  attached() {\n    if (!this.kNoInit) {\n      this.recreate();\n    }\n  }\n\n  recreate() {\n    this.kWidget = this.widgetBase.recreate();\n  }\n\n  _beforeInitialize(options) {\n    let toolbarItems = this.widgetBase.util.getChildrenVMs(this.element, `${constants.elementPrefix}toolbar-item`);\n    if (toolbarItems && toolbarItems.length > 0) {\n      options.items = [];\n\n      toolbarItems.forEach(item => {\n        options.items.push(item.getOptions());\n      });\n    }\n  }\n\n  destroy() {\n    this.widgetBase.destroy(this.kWidget);\n  }\n\n  detached() {\n    this.destroy();\n  }\n}\n"]}