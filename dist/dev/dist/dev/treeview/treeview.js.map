{"version":3,"sources":["treeview/treeview.js"],"names":["isInitFromUl","element","querySelectorAll","length","inject","Container","customElement","WidgetBase","generateBindables","constants","TreeView","elementPrefix","Element","widgetBase","container","control","useRootElement","linkViewModel","useContainer","subscribe","event","callback","bind","ctx","overrideCtx","useParentCtx","attached","useElement","target","document","createElement","appendChild","kNoInit","recreate","templates","util","getChildrenVMs","useTemplates","kWidget","destroy","detached"],"mappings":";;;;;;;;;;;AAyDA,WAASA,YAAT,CAAsBC,OAAtB,EAA+B;AAC7B,WAAOA,QAAQC,gBAAR,CAAyB,IAAzB,EAA+BC,MAA/B,GAAwC,CAA/C;AACD;;;AA3DOC,Y,+BAAAA,M;AAAQC,e,+BAAAA,S;;AACRC,mB,sBAAAA,a;;AACAC,gB,qBAAAA,U;;AACAC,uB,qBAAAA,iB;;AACAC,e,oBAAAA,S;;;0BAKKC,Q,WAHZJ,cAAiBG,UAAUE,aAA3B,c,UACAH,kBAAkB,eAAlB,C,UACAJ,OAAOQ,OAAP,EAAgBL,UAAhB,EAA4BF,SAA5B,C;AAEC,0BAAYJ,OAAZ,EAAqBY,UAArB,EAAiCC,SAAjC,EAA4C;AAAA;;AAC1C,eAAKb,OAAL,GAAeA,OAAf;AACA,eAAKY,UAAL,GAAkBA,WACfE,OADe,CACP,eADO,EAEfC,cAFe,CAEA,KAAKf,OAFL,EAGfgB,aAHe,CAGD,IAHC,EAIfC,YAJe,CAIFJ,SAJE,CAAlB;AAKD;;2BAEDK,S,sBAAUC,K,EAAOC,Q,EAAU;AACzB,iBAAO,KAAKR,UAAL,CAAgBM,SAAhB,CAA0BC,KAA1B,EAAiCC,QAAjC,CAAP;AACD,S;;2BAEDC,I,iBAAKC,G,EAAKC,W,EAAa;AACrB,eAAKX,UAAL,CAAgBY,YAAhB,CAA6BD,WAA7B;AACD,S;;2BAEDE,Q,uBAAW;AACT,cAAI1B,aAAa,KAAKC,OAAlB,CAAJ,EAAgC;AAC9B,iBAAKY,UAAL,CAAgBc,UAAhB,CAA2B,KAAK1B,OAAL,CAAaC,gBAAb,CAA8B,IAA9B,EAAoC,CAApC,CAA3B;AACD,WAFD,MAEO;AACL,gBAAI0B,SAASC,SAASC,aAAT,CAAuB,KAAvB,CAAb;AACA,iBAAK7B,OAAL,CAAa8B,WAAb,CAAyBH,MAAzB;AACA,iBAAKf,UAAL,CAAgBc,UAAhB,CAA2BC,MAA3B;AACD;;AAED,cAAI,CAAC,KAAKI,OAAV,EAAmB;AACjB,iBAAKC,QAAL;AACD;AACF,S;;2BAEDA,Q,uBAAW;AACT,cAAIC,YAAY,KAAKrB,UAAL,CAAgBsB,IAAhB,CAAqBC,cAArB,CAAoC,KAAKnC,OAAzC,EAAqDQ,UAAUE,aAA/D,cAAhB;AACA,eAAKE,UAAL,CAAgBwB,YAAhB,CAA6B,IAA7B,EAAmC,eAAnC,EAAoDH,SAApD;;AAEA,eAAKI,OAAL,GAAe,KAAKzB,UAAL,CAAgBoB,QAAhB,EAAf;AACD,S;;2BAEDM,O,sBAAU;AACR,eAAK1B,UAAL,CAAgB0B,OAAhB,CAAwB,KAAKD,OAA7B;AACD,S;;2BAEDE,Q,uBAAW;AACT,eAAKD,OAAL;AACD,S","file":"treeview/treeview.js","sourceRoot":"/source/","sourcesContent":["import {inject, Container} from 'aurelia-dependency-injection';\nimport {customElement} from 'aurelia-templating';\nimport {WidgetBase} from '../common/widget-base';\nimport {generateBindables} from '../common/decorators';\nimport {constants} from '../common/constants';\n\n@customElement(`${constants.elementPrefix}treeview`)\n@generateBindables('kendoTreeView')\n@inject(Element, WidgetBase, Container)\nexport class TreeView {\n  constructor(element, widgetBase, container) {\n    this.element = element;\n    this.widgetBase = widgetBase\n      .control('kendoTreeView')\n      .useRootElement(this.element)\n      .linkViewModel(this)\n      .useContainer(container);\n  }\n\n  subscribe(event, callback) {\n    return this.widgetBase.subscribe(event, callback);\n  }\n\n  bind(ctx, overrideCtx) {\n    this.widgetBase.useParentCtx(overrideCtx);\n  }\n\n  attached() {\n    if (isInitFromUl(this.element)) {\n      this.widgetBase.useElement(this.element.querySelectorAll('ul')[0]);\n    } else {\n      let target = document.createElement('div');\n      this.element.appendChild(target);\n      this.widgetBase.useElement(target);\n    }\n\n    if (!this.kNoInit) {\n      this.recreate();\n    }\n  }\n\n  recreate() {\n    let templates = this.widgetBase.util.getChildrenVMs(this.element, `${constants.elementPrefix}template`);\n    this.widgetBase.useTemplates(this, 'kendoTreeView', templates);\n\n    this.kWidget = this.widgetBase.recreate();\n  }\n\n  destroy() {\n    this.widgetBase.destroy(this.kWidget);\n  }\n\n  detached() {\n    this.destroy();\n  }\n}\n\nfunction isInitFromUl(element) {\n  return element.querySelectorAll('ul').length > 0;\n}\n"]}