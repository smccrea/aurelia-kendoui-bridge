{"version":3,"sources":["flatcolorpicker/flatcolorpicker.js"],"names":["inject","customElement","WidgetBase","generateBindables","constants","FlatColorPicker","attributePrefix","Element","element","widgetBase","control","useElement","linkViewModel","subscribe","event","callback","bind","ctx","overrideCtx","useParentCtx","attached","kNoInit","recreate","kWidget","destroy","detached"],"mappings":";;;;;;;;;;;;;AAAQA,Y,+BAAAA,M;;AACAC,mB,sBAAAA,a;;AACAC,gB,qBAAAA,U;;AACAC,uB,qBAAAA,iB;;AACAC,e,oBAAAA,S;;;iCAKKC,e,WAHZJ,cAAiBG,UAAUE,eAA3B,uB,UACAH,kBAAkB,sBAAlB,C,UACAH,OAAOO,OAAP,EAAgBL,UAAhB,C;AAEC,iCAAYM,OAAZ,EAAqBC,UAArB,EAAiC;AAAA;;AAC/B,eAAKD,OAAL,GAAeA,OAAf;AACA,eAAKC,UAAL,GAAkBA,WACfC,OADe,CACP,sBADO,EAEfC,UAFe,CAEJ,KAAKH,OAFD,EAGfI,aAHe,CAGD,IAHC,CAAlB;AAID;;kCAEDC,S,sBAAUC,K,EAAOC,Q,EAAU;AACzB,iBAAO,KAAKN,UAAL,CAAgBI,SAAhB,CAA0BC,KAA1B,EAAiCC,QAAjC,CAAP;AACD,S;;kCAEDC,I,iBAAKC,G,EAAKC,W,EAAa;AACrB,eAAKT,UAAL,CAAgBU,YAAhB,CAA6BD,WAA7B;AACD,S;;kCAEDE,Q,uBAAW;AACT,cAAI,CAAC,KAAKC,OAAV,EAAmB;AACjB,iBAAKC,QAAL;AACD;AACF,S;;kCAEDA,Q,uBAAW;AACT,eAAKC,OAAL,GAAe,KAAKd,UAAL,CAAgBa,QAAhB,EAAf;AACD,S;;kCAEDE,O,sBAAU;AACR,eAAKf,UAAL,CAAgBe,OAAhB,CAAwB,KAAKD,OAA7B;AACD,S;;kCAEDE,Q,uBAAW;AACT,eAAKD,OAAL;AACD,S","file":"flatcolorpicker/flatcolorpicker.js","sourceRoot":"/source/","sourcesContent":["import {inject} from 'aurelia-dependency-injection';\nimport {customElement} from 'aurelia-templating';\nimport {WidgetBase} from '../common/widget-base';\nimport {generateBindables} from '../common/decorators';\nimport {constants} from '../common/constants';\n\n@customElement(`${constants.attributePrefix}flat-color-picker`)\n@generateBindables('kendoFlatColorPicker')\n@inject(Element, WidgetBase)\nexport class FlatColorPicker {\n  constructor(element, widgetBase) {\n    this.element = element;\n    this.widgetBase = widgetBase\n      .control('kendoFlatColorPicker')\n      .useElement(this.element)\n      .linkViewModel(this);\n  }\n\n  subscribe(event, callback) {\n    return this.widgetBase.subscribe(event, callback);\n  }\n\n  bind(ctx, overrideCtx) {\n    this.widgetBase.useParentCtx(overrideCtx);\n  }\n\n  attached() {\n    if (!this.kNoInit) {\n      this.recreate();\n    }\n  }\n\n  recreate() {\n    this.kWidget = this.widgetBase.recreate();\n  }\n\n  destroy() {\n    this.widgetBase.destroy(this.kWidget);\n  }\n\n  detached() {\n    this.destroy();\n  }\n}\n"]}