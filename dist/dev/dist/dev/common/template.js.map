{"version":3,"sources":["common/template.js"],"names":["inject","customElement","bindable","noView","processContent","TargetInstruction","constants","Template","elementPrefix","compiler","resources","element","instruction","html","innerHTML","script","kendo","jQuery","children","length","template","targetInstruction","elementInstruction"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAQA,Y,+BAAAA,M;;AACAC,mB,sBAAAA,a;AAAeC,c,sBAAAA,Q;AAAUC,Y,sBAAAA,M;AAAQC,oB,sBAAAA,c;AAAgBC,uB,sBAAAA,iB;;AACjDC,e,oBAAAA,S;;;0BAsBKC,Q,WApBZN,cAAiBK,UAAUE,aAA3B,c,UACAL,Q,UACAC,eAAe,UAACK,QAAD,EAAWC,SAAX,EAAsBC,OAAtB,EAA+BC,WAA/B,EAA+C;AAC7D,YAAIC,OAAOF,QAAQG,SAAnB;AACA,YAAID,SAAS,EAAb,EAAiB;AAGf,cAAIE,SAASC,MAAMC,MAAN,CAAaN,OAAb,EAAsBO,QAAtB,CAA+B,QAA/B,CAAb;AACA,cAAIH,OAAOI,MAAP,GAAgB,CAApB,EAAuB;AACrBP,wBAAYQ,QAAZ,GAAuBJ,MAAMC,MAAN,CAAaF,MAAb,EAAqBF,IAArB,EAAvB;AACD,WAFD,MAEO;AAELD,wBAAYQ,QAAZ,GAAuBP,IAAvB;AACD;AACF;AACDF,gBAAQG,SAAR,GAAoB,EAApB;AAGD,OAhBA,C,UAiBAd,OAAOK,iBAAP,C,wEAMC,kBAAYgB,iBAAZ,EAA+B;AAAA;;AAAA;;AAAA;;AAAA;;AAC7B,aAAKD,QAAL,GAAgBC,kBAAkBC,kBAAlB,CAAqCF,QAArD;AACD,O,2EANAlB,Q;;;8EACAA,Q;;;iBAAe,U;;wFACfA,Q;;;iBAAyB,K","file":"common/template.js","sourceRoot":"/source/","sourcesContent":["import {inject} from 'aurelia-dependency-injection';\nimport {customElement, bindable, noView, processContent, TargetInstruction} from 'aurelia-templating';\nimport {constants} from '../common/constants';\n\n@customElement(`${constants.elementPrefix}template`)\n@noView()\n@processContent((compiler, resources, element, instruction) => {\n  let html = element.innerHTML;\n  if (html !== '') {\n    // if there's a script tag in the template, take the innerHTML of the script tag\n    // https://github.com/aurelia-ui-toolkits/aurelia-kendoui-bridge/issues/580\n    let script = kendo.jQuery(element).children('script');\n    if (script.length > 0) {\n      instruction.template = kendo.jQuery(script).html();\n    } else {\n      // no script tags? the template is the innerHTML\n      instruction.template = html;\n    }\n  }\n  element.innerHTML = ''; // remove any HTML from `<ak-template>` because it has already been retrieved above\n\n  // don't return true, so aurelia does not process the content of <ak-template>\n})\n@inject(TargetInstruction)\nexport class Template {\n  @bindable template;\n  @bindable for = 'template';\n  @bindable kendoTemplate = false;\n\n  constructor(targetInstruction) {\n    this.template = targetInstruction.elementInstruction.template;\n  }\n}\n"]}