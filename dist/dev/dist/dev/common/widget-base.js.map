{"version":3,"sources":["common/widget-base.js"],"names":["Util","OptionsBuilder","TemplateCompiler","TemplateGatherer","KendoConfigBuilder","inject","transient","RepeatStrategyLocator","ArrayRepeatStrategy","TaskQueue","Observer","LogManager","logger","getLogger","WidgetBase","taskQueue","templateCompiler","optionsBuilder","util","templateGatherer","configBuilder","repeatStratLocator","observer","bindingsToKendo","initialize","registerRepeatStrategy","control","controlName","window","kendo","jQuery","fn","Error","ctor","kendoOptions","widget","prototype","options","kendoEvents","events","linkViewModel","viewModel","useContainer","container","useElement","element","rootElement","useRootElement","beforeInitialize","cb","_beforeInitialize","afterInitialize","_afterInitialize","useParentCtx","overrideContext","parentCtx","useValueBinding","valueBindingProperty","valueFunction","withValueBinding","bindToKendo","propertyName","functionName","push","recreate","kWidget","destroy","allOptions","_getOptions","Object","assign","$angular","_$parent","_$container","debug","_createWidget","first","args","_handleValueChange","sender","one","forEach","value","binding","notify","getEventsFromAttributes","indexOf","fireKendoEvent","data","getOptions","eventOptions","getEventOptions","pruneOptions","kOptions","allowedEvents","concat","delayedExecution","includes","event","queueMicroTask","e","_hyphenate","evt","_propogatePreventDefault","defaultPrevented","preventDefault","getValue","handlePropertyChanged","property","newValue","oldValue","find","i","useTemplates","target","templates","warn","addStrategy","items","ObservableArray","subscribe","callback","length","wrapper","insertBefore","remove","classList","item","startsWith","show","empty"],"mappings":"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","file":"common/widget-base.js","sourceRoot":"/source/","sourcesContent":["import {Util} from './util';\nimport {OptionsBuilder} from './options-builder';\nimport {TemplateCompiler} from './template-compiler';\nimport {TemplateGatherer} from './template-gatherer';\nimport {KendoConfigBuilder} from '../config-builder';\nimport {inject, transient} from 'aurelia-dependency-injection';\nimport {RepeatStrategyLocator, ArrayRepeatStrategy} from 'aurelia-templating-resources';\nimport {TaskQueue} from 'aurelia-task-queue';\nimport {Observer} from './observer';\nimport * as LogManager from 'aurelia-logging';\n\nconst logger = LogManager.getLogger('aurelia-kendoui-bridge');\n\n/**\n* Abstraction of commonly used code across wrappers\n*/\n@transient()\n@inject(TaskQueue, TemplateCompiler, OptionsBuilder, Util, TemplateGatherer, KendoConfigBuilder, RepeatStrategyLocator, Observer)\nexport class WidgetBase {\n  /**\n  * The element of the custom element, or the element on which a custom attribute\n  * is placed. DOM events will be raised on this element\n  */\n  element: Element;\n\n  /**\n  * Used to prevent race conditions when events are raised before\n  * all bindings have been updated.\n  */\n  taskQueue: TaskQueue;\n\n  /**\n  * The element on which a Kendo widget is initialized\n  * This is the \"element\" by default\n  */\n  target: Element;\n\n  /**\n  * The Kendo control's name, such as kendoGrid or kendoButton\n  */\n  controlName: string;\n\n  /**\n  * The parent context (used for template compilation)\n  */\n  $parent: any;\n\n  /**\n  * The widgets parent viewmodel (this is the object instance the user will bind to)\n  */\n  viewModel: any;\n\n  /**\n   * The observer for event callbacks\n   */\n  observer: any;\n\n\n  /**\n  * A list of bindings for properties such as kEnable/kReadOnly/kValue\n  * whenever one of these properties changes an API function will be called on the Kendo control\n  * for example, a change of an 'kEnable' property will result in a .enable(true/false) call\n  */\n  bindingsToKendo = [];\n\n  constructor(taskQueue, templateCompiler, optionsBuilder, util, templateGatherer, configBuilder, repeatStratLocator, observer) {\n    this.taskQueue = taskQueue;\n    this.optionsBuilder = optionsBuilder;\n    this.util = util;\n    this.configBuilder = configBuilder;\n    this.repeatStratLocator = repeatStratLocator;\n    this.templateGatherer = templateGatherer;\n    this.observer = observer;\n    templateCompiler.initialize();\n    this.registerRepeatStrategy();\n  }\n\n  control(controlName) {\n    if (!controlName || !window.kendo || !kendo.jQuery.fn[controlName]) {\n      throw new Error(`The kendo control '${controlName}' is not available. Did you load Kendo (in addition to the bridge)?`);\n    }\n\n    this.controlName = controlName;\n\n    let ctor = kendo.jQuery.fn[this.controlName];\n    this.kendoOptions = ctor.widget.prototype.options;\n    this.kendoEvents = ctor.widget.prototype.events;\n\n    return this;\n  }\n\n  linkViewModel(viewModel) {\n    if (!viewModel) {\n      throw new Error('viewModel is not set');\n    }\n\n    this.viewModel = viewModel;\n\n    return this;\n  }\n\n  useContainer(container) {\n    if (!container) {\n      throw new Error('container is not set');\n    }\n\n    this.container = container;\n\n    return this;\n  }\n\n  useElement(element) {\n    this.element = element;\n\n    if (!this.rootElement) {\n      this.rootElement = element;\n    }\n\n    return this;\n  }\n\n  useRootElement(rootElement) {\n    this.rootElement = rootElement;\n\n    return this;\n  }\n\n  beforeInitialize(cb) {\n    this._beforeInitialize = cb;\n\n    return this;\n  }\n\n  afterInitialize(cb) {\n    this._afterInitialize = cb;\n\n    return this;\n  }\n\n  useParentCtx(overrideContext) {\n    this.parentCtx = overrideContext;\n\n    return this;\n  }\n\n\n  /**\n  * adds two-way value binding\n  * @param valueBindingProperty the property name of the kendo control (value/checked)\n  * @param valueFunction the function on the kendo control that gets the value of the above property\n  */\n  useValueBinding(valueBindingProperty = 'kValue', valueFunction = 'value') {\n    this.valueBindingProperty = valueBindingProperty;\n    this.valueFunction = valueFunction;\n    this.withValueBinding = true;\n\n    this.bindToKendo(valueBindingProperty, valueFunction);\n\n    return this;\n  }\n\n  /**\n  * add binding to Kendo\n  * whenever a bindable property in a wrapper changes, and the propertyname is in this list\n  * then it will call an API function on the Kendo control to update the value\n  * @param propertyName the bindable property name in the wrapper (kValue, kChecked, kEnabled)\n  * @param valueFunction the API function on the kendo control that sets the value of the above property\n  */\n  bindToKendo(propertyName, functionName) {\n    this.bindingsToKendo.push({\n      propertyName: propertyName,\n      functionName: functionName\n    });\n\n    return this;\n  }\n\n  /**\n  * collects all options objects\n  * calls all hooks\n  * then initialized the Kendo control as \"widget\"\n  */\n  recreate() {\n    if (!this.element) {\n      throw new Error('element is not set. Call .useElement(<target element>)');\n    }\n\n    // destroy old widgets\n    if (this.viewModel && this.viewModel.kWidget) {\n      this.destroy(this.viewModel.kWidget);\n    }\n\n    // generate all options, including event handlers - use the rootElement if specified, otherwise fall back to the element\n    // this allows a child element in a custom elements template to be the container for the kendo control\n    // but allows the plugin to correctly discover attributes on the root element to match against events\n    let allOptions = this._getOptions(this.rootElement);\n\n    // before initialization callback\n    // allows you to modify/add/remove options before the control gets initialized\n    if (this._beforeInitialize) {\n      this._beforeInitialize(allOptions);\n    }\n\n    // add parent context to options\n    // deepExtend in kendo.core will fail with stack\n    // overflow if we don't put it in an array :-\\\n    Object.assign(allOptions, {\n      $angular: [{ _$parent: this.parentCtx, _$container: this.container }]\n    });\n\n    logger.debug(`initializing ${this.controlName} with the following config`, allOptions);\n\n    let widget = this._createWidget(this.element, allOptions, this.controlName);\n\n    widget.$angular = [{\n      _$parent: this.parentCtx,\n      _$container: this.container\n    }];\n\n    if (this.withValueBinding) {\n      widget.first('change', (args) => this._handleValueChange(args.sender));\n      widget.one('dataBound', (args) => this._handleValueChange(args.sender));\n    }\n\n    // use Kendo API functions to update all initial values in the wrapper\n    // kValue -> .value()\n    // kEnabled -> .enable()\n    this.bindingsToKendo.forEach(binding => {\n      let value = this.viewModel[binding.propertyName];\n\n      // don't do this when the value of the widget is an empty string\n      // as it indicates that the widget has not been databound yet\n      if (typeof(value) !== 'undefined' && value !== null && value !== '') {\n        widget[binding.functionName](value);\n      }\n    });\n\n    if (this._afterInitialize) {\n      this._afterInitialize();\n    }\n\n    this.observer.notify('ready', widget);\n\n    if (this.util.getEventsFromAttributes(this.rootElement).indexOf('ready') > -1) {\n      this.util.fireKendoEvent(this.rootElement, 'ready', widget);\n    }\n\n    return widget;\n  }\n\n\n  _createWidget(element, options, controlName) {\n    return kendo.jQuery(element)[controlName](options).data(controlName);\n  }\n\n\n  /**\n  * combines all options objects and properties into a single options object\n  */\n  _getOptions(element) {\n    let options = this.optionsBuilder.getOptions(this.viewModel, this.controlName);\n    let eventOptions = this.getEventOptions(element);\n\n    // merge all option objects together\n    // - options on the wrapper\n    // - options compiled from all the bindable properties\n    // - event handler options\n    return this.util.pruneOptions(Object.assign({}, this.viewModel.kOptions || {}, options, eventOptions));\n  }\n\n\n  /**\n  * convert attributes into a list of events a user wants to subscribe to.\n  * These events are then subscribed to, which when called\n  * calls the fireKendoEvent function to raise a DOM event\n  */\n  getEventOptions(element) {\n    let options = {};\n    let allowedEvents = this.kendoEvents.concat(['ready']);\n    let delayedExecution = ['change'];\n\n    // iterate all attributes on the custom elements\n    // and only return the normalized kendo event's (dataBound etc)\n    let events = this.util.getEventsFromAttributes(element);\n\n    events.forEach(event => {\n      // throw error if this event is not defined on the Kendo control\n      if (!allowedEvents.includes(event)) {\n        throw new Error(`${event} is not an event on the ${this.controlName} control`);\n      }\n\n      if (delayedExecution.includes(event)) {\n        options[event] = e => {\n          this.taskQueue.queueMicroTask(() => {\n            this.observer.notify(event, e);\n\n            return this.util.fireKendoEvent(element, this.util._hyphenate(event), e);\n          });\n        };\n      } else {\n        options[event] = e => {\n          this.observer.notify(event, e);\n\n          let evt = this.util.fireKendoEvent(element, this.util._hyphenate(event), e);\n\n          if (this.configBuilder._propogatePreventDefault && evt.defaultPrevented) {\n            e.preventDefault();\n          }\n        };\n      }\n    });\n\n    return options;\n  }\n\n\n  _handleValueChange(widget) {\n    this.viewModel[this.valueBindingProperty] = this.getValue(widget);\n  }\n\n  getValue(widget) {\n    return widget[this.valueFunction]();\n  }\n\n  handlePropertyChanged(widget, property, newValue, oldValue) {\n    if (!widget) return;\n\n    let binding = this.bindingsToKendo.find(i => i.propertyName === property);\n    if (!binding) return;\n\n    if (typeof newValue === 'undefined') {\n      widget[binding.functionName](null);\n    } else if (widget[binding.functionName]() !== newValue) {\n      widget[binding.functionName](newValue);\n    }\n  }\n\n  useTemplates(target, controlName, templates) {\n    return this.templateGatherer.useTemplates(target, controlName, templates);\n  }\n\n  registerRepeatStrategy() {\n    if (this.configBuilder.registerRepeatStrategy) {\n      if (!window.kendo) {\n        logger.warn('Could not add RepeatStrategy for kendo.data.ObservableArray as kendo.data.ObservableArray has not been loaded');\n        return;\n      }\n      this.repeatStratLocator.addStrategy(items => items instanceof kendo.data.ObservableArray, new ArrayRepeatStrategy());\n    }\n  }\n\n  subscribe(event, callback) {\n    return this.observer.subscribe(event, callback);\n  }\n\n  /**\n  * destroys the widget\n  */\n  destroy(widget) {\n    if (widget && widget.element && widget.element.length > 0) {\n      if (widget.wrapper && (widget.wrapper !== widget.element)) {\n        widget.element.insertBefore(widget.wrapper);\n        widget.wrapper.remove();\n      }\n\n      // remove all class attributes from the element starting with k-\n      let classList = widget.element[0].classList;\n      for (let i = 0; i < classList.length; i++) {\n        let item = classList.item(i);\n        if (item.startsWith('k-')) {\n          classList.remove(item);\n        }\n      }\n\n      let element = widget.element;\n\n      kendo.destroy(element);\n\n      if (element) {\n        element.show().empty();\n      }\n\n      widget = null;\n\n      if (this.viewModel.kWidget) {\n        this.viewModel.kWidget = null;\n      }\n    }\n  }\n}\n"]}