{"version":3,"sources":["multiselect/multiselect.js"],"names":["getSelectNode","element","querySelectorAll","inject","Container","customElement","bindable","WidgetBase","generateBindables","constants","Multiselect","elementPrefix","Element","widgetBase","container","control","useRootElement","linkViewModel","useContainer","bindToKendo","subscribe","event","callback","bind","ctx","overrideCtx","useParentCtx","attached","kNoValueBinding","useValueBinding","kNoInit","recreate","selectNodes","useElement","length","templates","util","getChildrenVMs","useTemplates","kWidget","propertyChanged","property","newValue","oldValue","input","val","options","placeholder","handlePropertyChanged","destroy","detached"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqEA,WAASA,aAAT,CAAuBC,OAAvB,EAAgC;AAC9B,WAAOA,QAAQC,gBAAR,CAAyB,QAAzB,CAAP;AACD;;;AAvEOC,Y,+BAAAA,M;AAAQC,e,+BAAAA,S;;AACRC,mB,sBAAAA,a;AAAeC,c,sBAAAA,Q;;AACfC,gB,qBAAAA,U;;AACAC,uB,qBAAAA,iB;;AACAC,e,oBAAAA,S;;;6BAKKC,W,WAHZL,cAAiBI,UAAUE,aAA3B,iB,UACAH,kBAAkB,kBAAlB,EAAsC,CAAC,UAAD,CAAtC,C,UACAL,OAAOS,OAAP,EAAgBL,UAAhB,EAA4BH,SAA5B,C;AAMC,6BAAYH,OAAZ,EAAqBY,UAArB,EAAiCC,SAAjC,EAA4C;AAAA;;AAAA;;AAAA;;AAAA;;AAC1C,eAAKb,OAAL,GAAeA,OAAf;AACA,eAAKY,UAAL,GAAkBA,WACfE,OADe,CACP,kBADO,EAEfC,cAFe,CAEA,KAAKf,OAFL,EAGfgB,aAHe,CAGD,IAHC,EAIfC,YAJe,CAIFJ,SAJE,EAKfK,WALe,CAKH,UALG,EAKS,QALT,EAMfA,WANe,CAMH,WANG,EAMU,UANV,CAAlB;AAOD;;8BAEDC,S,sBAAUC,K,EAAOC,Q,EAAU;AACzB,iBAAO,KAAKT,UAAL,CAAgBO,SAAhB,CAA0BC,KAA1B,EAAiCC,QAAjC,CAAP;AACD,S;;8BAEDC,I,iBAAKC,G,EAAKC,W,EAAa;AACrB,eAAKZ,UAAL,CAAgBa,YAAhB,CAA6BD,WAA7B;AACD,S;;8BAEDE,Q,uBAAW;AACT,cAAI,CAAC,KAAKC,eAAV,EAA2B;AACzB,iBAAKf,UAAL,CAAgBgB,eAAhB;AACD;;AAED,cAAI,CAAC,KAAKC,OAAV,EAAmB;AACjB,iBAAKC,QAAL;AACD;AACF,S;;8BAEDA,Q,uBAAW;AACT,cAAIC,cAAchC,cAAc,KAAKC,OAAnB,CAAlB;AACA,eAAKY,UAAL,CAAgBoB,UAAhB,CAA2BD,YAAYE,MAAZ,GAAqB,CAArB,GAAyBF,YAAY,CAAZ,CAAzB,GAA0C,KAAK/B,OAA1E;;AAEA,cAAIkC,YAAY,KAAKtB,UAAL,CAAgBuB,IAAhB,CAAqBC,cAArB,CAAoC,KAAKpC,OAAzC,EAAqDQ,UAAUE,aAA/D,cAAhB;AACA,eAAKE,UAAL,CAAgByB,YAAhB,CAA6B,IAA7B,EAAmC,kBAAnC,EAAuDH,SAAvD;;AAEA,eAAKI,OAAL,GAAe,KAAK1B,UAAL,CAAgBkB,QAAhB,EAAf;AACD,S;;8BAEDS,e,4BAAgBC,Q,EAAUC,Q,EAAUC,Q,EAAU;AAE5C,cAAIF,aAAa,QAAb,IAAyB,KAAKF,OAAL,CAAaK,KAAb,CAAmBC,GAAnB,OAA6B,EAAtD,IAA4D,KAAKN,OAAL,CAAaK,KAAb,CAAmBC,GAAnB,OAA6B,KAAKN,OAAL,CAAaO,OAAb,CAAqBC,WAAlH,EAA+H;AAC7H,iBAAKlC,UAAL,CAAgBmC,qBAAhB,CAAsC,KAAKT,OAA3C,EAAoDE,QAApD,EAA8DC,QAA9D,EAAwEC,QAAxE;AACD;AACF,S;;8BAEDM,O,sBAAU;AACR,eAAKpC,UAAL,CAAgBoC,OAAhB,CAAwB,KAAKV,OAA7B;AACD,S;;8BAEDW,Q,uBAAW;AACT,eAAKD,OAAL;AACD,S;;;oFAxDA3C,Q;;;oFACAA,Q;;;0FACAA,Q;;;iBAA2B,K","file":"multiselect/multiselect.js","sourceRoot":"/source/","sourcesContent":["import {inject, Container} from 'aurelia-dependency-injection';\nimport {customElement, bindable} from 'aurelia-templating';\nimport {WidgetBase} from '../common/widget-base';\nimport {generateBindables} from '../common/decorators';\nimport {constants} from '../common/constants';\n\n@customElement(`${constants.elementPrefix}multiselect`)\n@generateBindables('kendoMultiSelect', ['template'])\n@inject(Element, WidgetBase, Container)\nexport class Multiselect {\n  @bindable kEnabled;\n  @bindable kReadOnly;\n  @bindable kNoValueBinding = false;\n\n  constructor(element, widgetBase, container) {\n    this.element = element;\n    this.widgetBase = widgetBase\n      .control('kendoMultiSelect')\n      .useRootElement(this.element)\n      .linkViewModel(this)\n      .useContainer(container)\n      .bindToKendo('kEnabled', 'enable')\n      .bindToKendo('kReadOnly', 'readonly');\n  }\n\n  subscribe(event, callback) {\n    return this.widgetBase.subscribe(event, callback);\n  }\n\n  bind(ctx, overrideCtx) {\n    this.widgetBase.useParentCtx(overrideCtx);\n  }\n\n  attached() {\n    if (!this.kNoValueBinding) {\n      this.widgetBase.useValueBinding();\n    }\n\n    if (!this.kNoInit) {\n      this.recreate();\n    }\n  }\n\n  recreate() {\n    let selectNodes = getSelectNode(this.element);\n    this.widgetBase.useElement(selectNodes.length > 0 ? selectNodes[0] : this.element);\n\n    let templates = this.widgetBase.util.getChildrenVMs(this.element, `${constants.elementPrefix}template`);\n    this.widgetBase.useTemplates(this, 'kendoMultiSelect', templates);\n\n    this.kWidget = this.widgetBase.recreate();\n  }\n\n  propertyChanged(property, newValue, oldValue) {\n    // do not process value changes when user input is present\n    if (property !== 'kValue' || this.kWidget.input.val() === '' || this.kWidget.input.val() === this.kWidget.options.placeholder) {\n      this.widgetBase.handlePropertyChanged(this.kWidget, property, newValue, oldValue);\n    }\n  }\n\n  destroy() {\n    this.widgetBase.destroy(this.kWidget);\n  }\n\n  detached() {\n    this.destroy();\n  }\n}\n\nfunction getSelectNode(element) {\n  return element.querySelectorAll('select');\n}\n"]}