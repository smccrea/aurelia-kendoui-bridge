{"version":3,"sources":["maskedtextbox/maskedtextbox.js"],"names":["inject","customAttribute","bindable","WidgetBase","generateBindables","constants","MaskedTextBox","attributePrefix","Element","element","widgetBase","control","useElement","linkViewModel","useValueBinding","bindToKendo","subscribe","event","callback","bind","ctx","overrideCtx","useParentCtx","attached","kNoInit","recreate","kWidget","propertyChanged","property","newValue","oldValue","handlePropertyChanged","destroy","detached"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAQA,Y,+BAAAA,M;;AACAC,qB,sBAAAA,e;AAAiBC,c,sBAAAA,Q;;AACjBC,gB,qBAAAA,U;;AACAC,uB,qBAAAA,iB;;AACAC,e,oBAAAA,S;;;+BAKKC,a,WAHZL,gBAAmBI,UAAUE,eAA7B,mB,UACAH,kBAAkB,oBAAlB,C,UACAJ,OAAOQ,OAAP,EAAgBL,UAAhB,C;AAMC,+BAAYM,OAAZ,EAAqBC,UAArB,EAAiC;AAAA;;AAAA;;AAAA;;AAAA;;AAC/B,eAAKD,OAAL,GAAeA,OAAf;AACA,eAAKC,UAAL,GAAkBA,WACfC,OADe,CACP,oBADO,EAEfC,UAFe,CAEJ,KAAKH,OAFD,EAGfI,aAHe,CAGD,IAHC,EAIfC,eAJe,GAKfC,WALe,CAKH,UALG,EAKS,QALT,EAMfA,WANe,CAMH,WANG,EAMU,UANV,CAAlB;AAOD;;gCAEDC,S,sBAAUC,K,EAAOC,Q,EAAU;AACzB,iBAAO,KAAKR,UAAL,CAAgBM,SAAhB,CAA0BC,KAA1B,EAAiCC,QAAjC,CAAP;AACD,S;;gCAEDC,I,iBAAKC,G,EAAKC,W,EAAa;AACrB,eAAKX,UAAL,CAAgBY,YAAhB,CAA6BD,WAA7B;AACD,S;;gCAEDE,Q,uBAAW;AACT,cAAI,CAAC,KAAKC,OAAV,EAAmB;AACjB,iBAAKC,QAAL;AACD;AACF,S;;gCAEDA,Q,uBAAW;AACT,eAAKC,OAAL,GAAe,KAAKhB,UAAL,CAAgBe,QAAhB,EAAf;AACD,S;;gCAEDE,e,4BAAgBC,Q,EAAUC,Q,EAAUC,Q,EAAU;AAC5C,eAAKpB,UAAL,CAAgBqB,qBAAhB,CAAsC,KAAKL,OAA3C,EAAoDE,QAApD,EAA8DC,QAA9D,EAAwEC,QAAxE;AACD,S;;gCAEDE,O,sBAAU;AACR,eAAKtB,UAAL,CAAgBsB,OAAhB,CAAwB,KAAKN,OAA7B;AACD,S;;gCAEDO,Q,uBAAW;AACT,eAAKD,OAAL;AACD,S;;;yFA3CA9B,Q;;;mFACAA,Q;;;oFACAA,Q","file":"maskedtextbox/maskedtextbox.js","sourceRoot":"/source/","sourcesContent":["import {inject} from 'aurelia-dependency-injection';\r\nimport {customAttribute, bindable} from 'aurelia-templating';\r\nimport {WidgetBase} from '../common/widget-base';\r\nimport {generateBindables} from '../common/decorators';\r\nimport {constants} from '../common/constants';\r\n\r\n@customAttribute(`${constants.attributePrefix}maskedtextbox`)\r\n@generateBindables('kendoMaskedTextBox')\r\n@inject(Element, WidgetBase)\r\nexport class MaskedTextBox {\r\n  @bindable kDisableDates;\r\n  @bindable kEnabled;\r\n  @bindable kReadOnly;\r\n\r\n  constructor(element, widgetBase) {\r\n    this.element = element;\r\n    this.widgetBase = widgetBase\r\n      .control('kendoMaskedTextBox')\r\n      .useElement(this.element)\r\n      .linkViewModel(this)\r\n      .useValueBinding()\r\n      .bindToKendo('kEnabled', 'enable')\r\n      .bindToKendo('kReadOnly', 'readonly');\r\n  }\r\n\r\n  subscribe(event, callback) {\r\n    return this.widgetBase.subscribe(event, callback);\r\n  }\r\n\r\n  bind(ctx, overrideCtx) {\r\n    this.widgetBase.useParentCtx(overrideCtx);\r\n  }\r\n\r\n  attached() {\r\n    if (!this.kNoInit) {\r\n      this.recreate();\r\n    }\r\n  }\r\n\r\n  recreate() {\r\n    this.kWidget = this.widgetBase.recreate();\r\n  }\r\n\r\n  propertyChanged(property, newValue, oldValue) {\r\n    this.widgetBase.handlePropertyChanged(this.kWidget, property, newValue, oldValue);\r\n  }\r\n\r\n  destroy() {\r\n    this.widgetBase.destroy(this.kWidget);\r\n  }\r\n\r\n  detached() {\r\n    this.destroy();\r\n  }\r\n}\r\n"]}